#File: .github/workflows/workflow.yml
name: dynamicfifo-release-regression
run-name: ${{ github.actor }} is running regression tests on ${{ github.repository }}
on:
  push:
    branches:
      - release-candidate

# git commit -a -m "release candidate"; git push origin main:release-candidate

env: 
# Define these in GitHub Actions variables
#  VM_SIZE: Standard_D2s_v3 #small ($70/mo)
#  VM_SIZE: Standard_E4s_v3 #medium ($90/mo)
#  VM_SIZE: Standard_D4s_v3 #large ($140/mo)

  VM_NAME: rst-runner-${{ github.run_id }}-${{ github.run_attempt }}
  VM_IMAGE: /subscriptions/${{ secrets.AZURE_SUBSCRIPTION }}/resourceGroups/${{ secrets.RESOURCE_GROUP }}/providers/Microsoft.Compute/galleries/chiselware/images/dev-platform

jobs:
  create-vm:
    runs-on: ubuntu-latest
    steps:
      - name: Display Github variables
        run: |
          echo "GitHub variables"
          echo "----------------"
          echo "Home: ${HOME}"
          echo "VM NAME: ${{ env.VM_NAME }}"
          echo "VM SIZE: ${{ vars.VM_SIZE }}"
          echo "VM USER: ${{ vars.VM_USER }}"
          echo "GITHUB_RUNNER_NAME: $(basename $(dirname $(dirname $(dirname $(pwd)))))"
          echo "GITHUB_WORKFLOW: ${GITHUB_WORKFLOW}"
          echo "GITHUB_ACTIONS: ${GITHUB_ACTIONS}"
          echo "GITHUB_ACTOR: ${GITHUB_ACTOR}"
          echo "GITHUB_REPOSITORY: ${GITHUB_REPOSITORY}"
          echo "GITHUB_EVENT_NAME: ${GITHUB_EVENT_NAME}"
          echo "GITHUB_WORKSPACE: ${GITHUB_WORKSPACE}"
          echo "GITHUB_SHA: ${GITHUB_SHA}"

      - name: Azure login 
        uses: azure/login@v1
        with:
          creds: ${{ secrets.DYNAMICFIFO_SECRET }}

      - name: Create VM
        run: > 
          az vm create -n $VM_NAME -g ${{ secrets.RESOURCE_GROUP }}
          --image ${{ env.VM_IMAGE }}
          --size ${{ vars.VM_SIZE }}
          --location ${{ vars.VM_LOCATION}}
          --generate-ssh-keys
          --security-type TrustedLaunch
          --public-ip-sku Standard
          --nic-delete-option Delete
          --os-disk-delete-option Delete
          --data-disk-delete Delete

      - name: Download the runner software
        run: > 
          az vm run-command invoke 
          -g ${{ secrets.RESOURCE_GROUP }} 
          -n $VM_NAME 
          --command-id RunShellScript 
          --scripts "
          sudo -H -u ${{ vars.VM_USER }} bash -c 'mkdir /home/${{ vars.VM_USER }}/actions-runner ; 
          cd /home/${{ vars.VM_USER }}/actions-runner ;
          curl -o /home/${{ vars.VM_USER }}/actions-runner-linux-x64-2.317.0.tar.gz -L https://github.com/actions/runner/releases/download/v2.317.0/actions-runner-linux-x64-2.317.0.tar.gz ;
          tar xzf /home/${{ vars.VM_USER }}/actions-runner-linux-x64-2.317.0.tar.gz ; 
          rm /home/${{ vars.VM_USER }}/actions-runner-linux-x64-2.317.0.tar.gz 
          '"

      - name: Configure runner
        run: > 
          az vm run-command invoke 
          -g ${{ secrets.RESOURCE_GROUP }} 
          -n $VM_NAME 
          --command-id RunShellScript 
          --scripts "sudo -H -u ${{vars.VM_USER }} bash -c ' cd /home/${{ vars.VM_USER }}/actions-runner; ./config.sh --url https://github.com/rocksavagetech --token ${{ secrets.DYNAMICFIFO_GHR_TOKEN }} --unattended 2>&1 >> /home/${{ vars.VM_USER }}/actions-runner/config.command.log '"

      - name: Start runner
        run: >
          az vm run-command invoke 
          -g ${{ secrets.RESOURCE_GROUP }} 
          -n $VM_NAME 
          --command-id RunShellScript 
          --scripts "sudo -H -u ${{vars.VM_USER }} bash -c ' /home/${{ vars.VM_USER }}/actions-runner/run.sh 2>&1 >> /home/${{ vars.VM_USER }}/actions-runner/run-command.log & '" 

  build-and-test:
    needs: create-vm
    runs-on: self-hosted
    steps:
      - name: Azure login
        uses: azure/login@v1 
        with:
          creds: ${{ secrets.DYNAMICFIFO_SECRET }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: Run all tests
        run: |
          make all

  delete-vm:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
    - name: Azure login
      uses: azure/login@v1 
      with:
        creds: ${{ secrets.DYNAMICFIFO_SECRET }}

    - name: Delete VM and all resources
      run: |
        az vm delete -g ${{ secrets.RESOURCE_GROUP }} -n ${{ env.VM_NAME }} --force-deletion none --yes
        az network nsg delete -g ${{ secrets.RESOURCE_GROUP }} --name ${{ env.VM_NAME}}NSG
        az network public-ip delete -g ${{ secrets.RESOURCE_GROUP }} --name ${{ env.VM_NAME}}PublicIP
        unattachedDiskIds=$(az disk list --query '[?managedBy==`null`].[id]' -o tsv)
        for id in ${unattachedDiskIds[@]}; do az disk delete --ids $id --yes; done


